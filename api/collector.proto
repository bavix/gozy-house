syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "./;collector";

service Collector {
  // Method for sending events in a batch.
  // The limit must be set via ENV.
  // Events that fail validation are ignored.
  rpc SendBeacon(Events) returns (google.protobuf.Empty);

  // Validator in a real application is not desirable to use.
  // It is needed only for debugging.
  rpc Validator(Event) returns (ValidationResult);
}

message Events {
  repeated Event items = 1;
}

message Event {
  bytes traceID = 1; // Idempotency Key
  bytes gzyID = 2; // Client ID generated on the client side

  bytes appID = 3; // Application ID
  string metadata = 4; // App/device... metadata (json)

  string requestUrl = 5; // Current url (url with query)
  string referralUrl = 6; // Referral url (url with query)

  string clientID = 7; // User ID
  string clientData = 8; // User metadata (json)

  string userAgent = 9; // client user agent

  string cookies = 10; // browser string "key1=val1; key2=val2;" from document.cookie

  string category = 11; // event category
  string name = 12; // event name
  string label = 13; // event label
  string payload = 14; // event metadata/payload (json)

  google.protobuf.Timestamp createdAt = 15;
}

message ValidationResult {
  bool success = 1; // has it been validated
  repeated Item items = 2; // error set

  message Item {
    sint32 num = 1; // event number in array
    string name = 2; // the name of the key in the event
    string desc = 3; // error description
    sint64 err = 4; // internal error code
  }
}
